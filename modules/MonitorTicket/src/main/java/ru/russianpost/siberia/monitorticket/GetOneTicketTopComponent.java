/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ru.russianpost.siberia.monitorticket;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import java.nio.charset.StandardCharsets;
import javax.xml.soap.SOAPException;
import javax.xml.stream.XMLStreamException;
import javax.xml.transform.TransformerException;
import org.openide.util.Exceptions;
import org.openide.windows.IOProvider;
import org.openide.windows.InputOutput;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//ru.russianpost.siberia.monitorticket//GetOneTicket//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "GetOneTicketTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "ru.russianpost.siberia.monitorticket.GetOneTicketTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_GetOneTicketAction",
        preferredID = "GetOneTicketTopComponent"
)
@Messages({
    "CTL_GetOneTicketAction=GetOneTicket",
    "CTL_GetOneTicketTopComponent=GetOneTicket Window",
    "HINT_GetOneTicketTopComponent=This is a GetOneTicket window"
})
public final class GetOneTicketTopComponent extends TopComponent {

    public GetOneTicketTopComponent() {
        initComponents();
        setName(Bundle.CTL_GetOneTicketTopComponent());
        setToolTipText(Bundle.HINT_GetOneTicketTopComponent());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        edTicket = new javax.swing.JTextField();
        btQuest = new javax.swing.JButton();
        btTest = new javax.swing.JButton();
        jBtTestLog = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        edRet = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        edResult = new javax.swing.JTextArea();

        jPanel.setNextFocusableComponent(edTicket);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(GetOneTicketTopComponent.class, "GetOneTicketTopComponent.jLabel1.text")); // NOI18N

        edTicket.setText(org.openide.util.NbBundle.getMessage(GetOneTicketTopComponent.class, "GetOneTicketTopComponent.edTicket.text")); // NOI18N
        edTicket.setToolTipText(org.openide.util.NbBundle.getMessage(GetOneTicketTopComponent.class, "GetOneTicketTopComponent.edTicket.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btQuest, org.openide.util.NbBundle.getMessage(GetOneTicketTopComponent.class, "GetOneTicketTopComponent.btQuest.text")); // NOI18N
        btQuest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btQuestActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(btTest, org.openide.util.NbBundle.getMessage(GetOneTicketTopComponent.class, "GetOneTicketTopComponent.btTest.text")); // NOI18N
        btTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTestActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jBtTestLog, org.openide.util.NbBundle.getMessage(GetOneTicketTopComponent.class, "GetOneTicketTopComponent.jBtTestLog.text")); // NOI18N
        jBtTestLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtTestLogActionPerformed(evt);
            }
        });

        edRet.setColumns(20);
        edRet.setRows(5);
        jScrollPane1.setViewportView(edRet);
        edRet.getAccessibleContext().setAccessibleParent(jPanel);

        edResult.setColumns(20);
        edResult.setRows(5);
        jScrollPane2.setViewportView(edResult);
        edResult.getAccessibleContext().setAccessibleParent(jPanel);

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(edTicket))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBtTestLog)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addComponent(btQuest)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btTest)
                        .addContainerGap())))
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jBtTestLog)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(edTicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btQuest)
                    .addComponent(btTest))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBtTestLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtTestLogActionPerformed
        InputOutput io = IOProvider.getDefault().getIO("MyMessages", false);
        io.getOut().println("Some normal message");
        io.getErr().println("Error message");
        io.getOut().close();
        io.getErr().close();
        io.select();
    }//GEN-LAST:event_jBtTestLogActionPerformed

    private void btTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTestActionPerformed
        //        try {
            //            dbaccessUtil.Conn();
            //            dbaccessUtil.CreateDB();
            //            dbaccessUtil.CloseDB();
            //        } catch (ClassNotFoundException | SQLException ex) {
            //            Exceptions.printStackTrace(ex);
            //          }
    }//GEN-LAST:event_btTestActionPerformed

    private void btQuestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btQuestActionPerformed
        InputStream is = null;
        try {
            edResult.setText(Req.GetTicket(edTicket.getText()));
        } catch (SOAPException ex) {
            Exceptions.printStackTrace(ex);
            edResult.setText(ex.getMessage());
        } catch (TransformerException ex) {
            Exceptions.printStackTrace(ex);
            edResult.setText(ex.getMessage());
        }

        try {
            is = new ByteArrayInputStream(edTicket.getText().getBytes(StandardCharsets.UTF_8.name()));
        } catch (UnsupportedEncodingException ex) {
            Exceptions.printStackTrace(ex);
        }
        try {
            StaxStreamProcessor processor = new StaxStreamProcessor(is);
            while (processor.startElement("historyRecord", "OperationHistoryData")) {
                edRet.append(processor.getText());
            }
        } catch (XMLStreamException ex) {
            Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_btQuestActionPerformed

    SOAPRequest Req;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btQuest;
    private javax.swing.JButton btTest;
    private javax.swing.JTextArea edResult;
    private javax.swing.JTextArea edRet;
    private javax.swing.JTextField edTicket;
    private javax.swing.JButton jBtTestLog;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
